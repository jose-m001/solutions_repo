{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Problem 1 1. Theoretical Foundation Projectile Motion Analysis Motivation Projectile motion, while seemingly simple, offers a rich playground for exploring fundamental principles of physics. The problem is straightforward: analyze how the range of a projectile depends on its angle of projection. Yet, beneath this simplicity lies a complex and versatile framework. The equations governing projectile motion involve both linear and quadratic relationships, making them accessible yet deeply insightful. What makes this topic particularly compelling is the number of free parameters involved in these equations, such as initial velocity, gravitational acceleration, and launch height. These parameters give rise to a diverse set of solutions that can describe a wide array of real-world phenomena, from the arc of a soccer ball to the trajectory of a rocket. Deliverables A Python script implementing the simulation of projectile motion. Detailed description of the family of solutions derived from the governing equations Graphs illustrating the trajectory and range as a function of the angle of projection. A discussion of the limitations and potential extensions of the idealized model, such as incorporating air resistance or uneven terrain. Theoretical Foundation Governing Equations The motion of a projectile can be described using the following kinematic equations: Horizontal Motion: $$ x(t) = v_0 \\cos(\\theta) t $$ Vertical Motion: $$ y(t) = h + v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2 $$ Where: \\( x(t) \\) and \\( y(t) \\) are the horizontal and vertical positions at time \\( t \\) , respectively. \\( v_0 \\) is the initial velocity. \\( \\theta \\) is the angle of projection. \\( h \\) is the initial height. \\( g \\) is the acceleration due to gravity. Range Derivation The horizontal range \\( R \\) is the distance traveled by the projectile when it returns to the same vertical height as the launch point ( \\( y = 0 \\) ). For a projectile launched from ground level ( \\( h = 0 \\) ): 1. Solve for the time of flight \\( T \\) : $$ T = \\frac{2 v_0 \\sin(\\theta)}{g} $$ Calculate the range: $$ R = v_0 \\cos(\\theta) T $$ $$ R = \\frac{v_0^2 \\sin(2\\theta)}{g} $$ This equation shows that the range depends on the square of the initial velocity, the sine of twice the angle, and inversely on gravity. 2. Analysis of the Range Dependency on Angle The range is maximized when \\( \\sin(2\\theta) \\) is maximized, which occurs at \\( \\theta = 45^\\circ \\) . Effect of Other Parameters Initial Velocity: The range increases quadratically with \\(v_0\\) . Gravitational Acceleration: The range decreases as \\(g\\) increases. Launch Height: For \\( h > 0 \\) , the time of flight is longer, increasing the range. 3. Practical Applications Real-World Scenarios Uneven Terrain: The landing point depends on the elevation difference. Air Resistance: Introduces drag force, reducing the range and altering the trajectory. Sports: Understanding ball trajectories in soccer, basketball, etc. 4. Implementation Python Simulation Below is a Python script to simulate and visualize projectile motion: import numpy as np import matplotlib.pyplot as plt def projectile_motion(v0, theta, h, g=9.81): theta_rad = np.radians(theta) # Time of flight (quadratic formula for y=0) t_flight = (v0 * np.sin(theta_rad) + np.sqrt((v0 * np.sin(theta_rad))**2 + 2 * g * h)) / g # Time array t = np.linspace(0, t_flight, num=500) # Trajectory equations x = v0 * np.cos(theta_rad) * t y = h + v0 * np.sin(theta_rad) * t - 0.5 * g * t**2 return x, y def plot_range_vs_angle(v0, h, g=9.81): angles = np.linspace(0, 90, num=500) ranges = [] for theta in angles: theta_rad = np.radians(theta) term = (v0 * np.sin(theta_rad))**2 + 2 * g * h t_flight = (v0 * np.sin(theta_rad) + np.sqrt(term)) / g R = v0 * np.cos(theta_rad) * t_flight ranges.append(R) plt.figure(figsize=(10, 6)) plt.plot(angles, ranges, label=f\"Initial Height: {h} m\") plt.xlabel(\"Angle of Projection (degrees)\") plt.ylabel(\"Range (m)\") plt.title(\"Range vs Angle of Projection\") plt.legend() plt.grid() plt.show() # Example usage v0 = 20 # Initial velocity in m/s h = 0 # Launch height in meters g = 9.81 # Gravitational acceleration # Simulate trajectory x, y = projectile_motion(v0, 45, h, g) # Plot trajectory plt.figure(figsize=(10, 6)) plt.plot(x, y, label=\"Trajectory (45 degrees)\") plt.xlabel(\"Horizontal Distance (m)\") plt.ylabel(\"Vertical Distance (m)\") plt.title(\"Projectile Motion Trajectory\") plt.legend() plt.grid() plt.show() # Plot range vs angle plot_range_vs_angle(v0, h, g) 5. Discussion Limitations No Air Resistance: Assumes a vacuum, leading to an overestimation of range. Constant Gravity: Neglects variations in gravitational acceleration with altitude. Point Mass: Ignores rotational effects or aerodynamic properties. Extensions Incorporate drag forces to model air resistance. Simulate projectile motion on non-level surfaces. Explore the effect of wind and spin on the projectile.","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#1-theoretical-foundation","text":"","title":"1. Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#projectile-motion-analysis","text":"","title":"Projectile Motion Analysis"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#motivation","text":"Projectile motion, while seemingly simple, offers a rich playground for exploring fundamental principles of physics. The problem is straightforward: analyze how the range of a projectile depends on its angle of projection. Yet, beneath this simplicity lies a complex and versatile framework. The equations governing projectile motion involve both linear and quadratic relationships, making them accessible yet deeply insightful. What makes this topic particularly compelling is the number of free parameters involved in these equations, such as initial velocity, gravitational acceleration, and launch height. These parameters give rise to a diverse set of solutions that can describe a wide array of real-world phenomena, from the arc of a soccer ball to the trajectory of a rocket.","title":"Motivation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#deliverables","text":"A Python script implementing the simulation of projectile motion. Detailed description of the family of solutions derived from the governing equations Graphs illustrating the trajectory and range as a function of the angle of projection. A discussion of the limitations and potential extensions of the idealized model, such as incorporating air resistance or uneven terrain.","title":"Deliverables"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#theoretical-foundation","text":"","title":"Theoretical Foundation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#governing-equations","text":"The motion of a projectile can be described using the following kinematic equations: Horizontal Motion: $$ x(t) = v_0 \\cos(\\theta) t $$ Vertical Motion: $$ y(t) = h + v_0 \\sin(\\theta) t - \\frac{1}{2} g t^2 $$ Where: \\( x(t) \\) and \\( y(t) \\) are the horizontal and vertical positions at time \\( t \\) , respectively. \\( v_0 \\) is the initial velocity. \\( \\theta \\) is the angle of projection. \\( h \\) is the initial height. \\( g \\) is the acceleration due to gravity.","title":"Governing Equations"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#range-derivation","text":"The horizontal range \\( R \\) is the distance traveled by the projectile when it returns to the same vertical height as the launch point ( \\( y = 0 \\) ). For a projectile launched from ground level ( \\( h = 0 \\) ): 1. Solve for the time of flight \\( T \\) : $$ T = \\frac{2 v_0 \\sin(\\theta)}{g} $$ Calculate the range: $$ R = v_0 \\cos(\\theta) T $$ $$ R = \\frac{v_0^2 \\sin(2\\theta)}{g} $$ This equation shows that the range depends on the square of the initial velocity, the sine of twice the angle, and inversely on gravity.","title":"Range Derivation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#2-analysis-of-the-range","text":"","title":"2. Analysis of the Range"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#dependency-on-angle","text":"The range is maximized when \\( \\sin(2\\theta) \\) is maximized, which occurs at \\( \\theta = 45^\\circ \\) .","title":"Dependency on Angle"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#effect-of-other-parameters","text":"Initial Velocity: The range increases quadratically with \\(v_0\\) . Gravitational Acceleration: The range decreases as \\(g\\) increases. Launch Height: For \\( h > 0 \\) , the time of flight is longer, increasing the range.","title":"Effect of Other Parameters"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#3-practical-applications","text":"","title":"3. Practical Applications"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#real-world-scenarios","text":"Uneven Terrain: The landing point depends on the elevation difference. Air Resistance: Introduces drag force, reducing the range and altering the trajectory. Sports: Understanding ball trajectories in soccer, basketball, etc.","title":"Real-World Scenarios"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#4-implementation","text":"","title":"4. Implementation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#python-simulation","text":"Below is a Python script to simulate and visualize projectile motion: import numpy as np import matplotlib.pyplot as plt def projectile_motion(v0, theta, h, g=9.81): theta_rad = np.radians(theta) # Time of flight (quadratic formula for y=0) t_flight = (v0 * np.sin(theta_rad) + np.sqrt((v0 * np.sin(theta_rad))**2 + 2 * g * h)) / g # Time array t = np.linspace(0, t_flight, num=500) # Trajectory equations x = v0 * np.cos(theta_rad) * t y = h + v0 * np.sin(theta_rad) * t - 0.5 * g * t**2 return x, y def plot_range_vs_angle(v0, h, g=9.81): angles = np.linspace(0, 90, num=500) ranges = [] for theta in angles: theta_rad = np.radians(theta) term = (v0 * np.sin(theta_rad))**2 + 2 * g * h t_flight = (v0 * np.sin(theta_rad) + np.sqrt(term)) / g R = v0 * np.cos(theta_rad) * t_flight ranges.append(R) plt.figure(figsize=(10, 6)) plt.plot(angles, ranges, label=f\"Initial Height: {h} m\") plt.xlabel(\"Angle of Projection (degrees)\") plt.ylabel(\"Range (m)\") plt.title(\"Range vs Angle of Projection\") plt.legend() plt.grid() plt.show() # Example usage v0 = 20 # Initial velocity in m/s h = 0 # Launch height in meters g = 9.81 # Gravitational acceleration # Simulate trajectory x, y = projectile_motion(v0, 45, h, g) # Plot trajectory plt.figure(figsize=(10, 6)) plt.plot(x, y, label=\"Trajectory (45 degrees)\") plt.xlabel(\"Horizontal Distance (m)\") plt.ylabel(\"Vertical Distance (m)\") plt.title(\"Projectile Motion Trajectory\") plt.legend() plt.grid() plt.show() # Plot range vs angle plot_range_vs_angle(v0, h, g)","title":"Python Simulation"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#5-discussion","text":"","title":"5. Discussion"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#limitations","text":"No Air Resistance: Assumes a vacuum, leading to an overestimation of range. Constant Gravity: Neglects variations in gravitational acceleration with altitude. Point Mass: Ignores rotational effects or aerodynamic properties.","title":"Limitations"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#extensions","text":"Incorporate drag forces to model air resistance. Simulate projectile motion on non-level surfaces. Explore the effect of wind and spin on the projectile.","title":"Extensions"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}